---
import Layout from '../../../layouts/Layout.astro'
import { getCollection } from 'astro:content'
import { type Locale } from "../../../i18n/locales";
import { byLang } from "../../../i18n/utils/content";
import { buildTagPath } from "../../../i18n/utils/urlBuilders";
import { pathsForAllLocales } from "../../../i18n/utils/path";
import { getPageMeta } from "../../../i18n/loaders/meta";

export function getStaticPaths() {
  return pathsForAllLocales();
}

const lang = Astro.params.lang as Locale;

const allPosts = await getCollection('blog', byLang(lang));

const tagsWithCounts = new Map<string, number>();
for (const post of allPosts) {
  const tags = Array.isArray(post.data.tags) ? post.data.tags : [];
  for (const t of tags) tagsWithCounts.set(t, (tagsWithCounts.get(t) ?? 0) + 1);
}
const tags = [...tagsWithCounts.entries()].sort(([a],[b]) => a.localeCompare(b));

const meta = getPageMeta(lang, "tags:index");

---

<Layout pageTitle={meta.title} description={meta.description} >
  <h1>{meta.title}</h1>
  <nav aria-label="Tags">
    <ul class="tags">
      {tags.map((tag) => (
        <li class="tag">
          <a href={buildTagPath(lang, tag[0])}>{tag[0]} ({tag[1]})</a>
        </li>
      ))}
    </ul>
  </nav>
</Layout>

<style>
  a {
    color: #00539f;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .tag {
    margin: 0;
    border: dotted 1px #a1a1a1;
    border-radius: 0.5em;
    padding: 0.5em 1em;
    font-size: 1.15em;
    background-color: #f8fcfd;
  }
</style>
